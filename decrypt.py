#!/usr/bin/env python3
import math
import sympy

def decrypt(n,e,c):
    arr = []
    arr1 = []

    def print_factors(x):
        # print("The factors of",x,"are:")
        for i in range(1, x + 1):
            if x % i == 0:
                arr.append(i)
                

    print_factors(n)

    for i in range(len(arr) - 1):
        p = (arr[i]-1)
        q = (arr[i+1]-1)
        if(math.gcd(e,p*q) == 1):
            
            arr1.append([p,q])
            break

    phi = []
    for j in range(len(arr1)):
        r = arr1[j][0] * arr1[j][1]
        phi.append(r)
        

    d = []
    for i in range(len(phi)):
        d.append(sympy.mod_inverse(e, phi[i]))
        
    
    message = ""    
    for i in range(len(c)):
        m = math.ceil((pow(c[i],d[0]))%n)
        message += chr(m)
        
    # print(message)
    return message


n = 551
e = 5
c = [247, 384, 171, 309, 390, 185, 421, 310, 115, 262, 390, 185, 180, 384, 147, 384, 171, 185, 115, 421, 203, 185, 298, 390, 309, 203, 271, 185, 302, 384, 344, 115, 309, 302, 203, 309, 203, 262, 171, 185, 298, 180, 421, 310, 421, 115, 302, 421, 344, 487, 185, 309, 147, 421, 203, 278, 185, 488, 298, 390, 185, 115, 309, 180, 185, 344, 262, 147, 147, 298, 185, 384, 171, 302, 421, 278, 185, 501, 384, 344, 309, 302, 185, 180, 421, 487, 344, 421, 115, 115, 421, 390, 185, 390, 298, 487, 344, 298, 185, 72, 421, 72, 309, 344, 180, 262, 390, 185, 147, 421, 72, 309, 171, 384, 185, 264, 421, 264, 309, 171, 171, 298, 271, 185, 421, 344, 185, 68, 298, 302, 421, 147, 421, 115, 421, 115, 185, 309, 171, 384, 115, 185, 147, 262, 302, 203, 262, 115, 278, 185, 231, 309, 115, 203, 421, 72, 262, 147, 262, 390, 185, 310, 262, 147, 264, 421, 344, 298, 171, 185, 298, 262, 487, 262, 309, 185, 309, 203, 185, 309, 147, 309, 390, 309, 344, 203, 262, 390, 185, 115, 384, 147, 147, 421, 302, 421, 203, 262, 180, 421, 344, 278, 185, 514, 298, 262, 171, 421, 115, 185, 302, 262, 171, 115, 262, 115, 185, 68, 309, 262, 487, 421, 298, 203, 185, 264, 298, 171, 421, 262, 115, 278, 185, 245, 171, 384, 421, 344, 185, 203, 421, 344, 302, 421, 180, 262, 344, 203, 185, 147, 421, 487, 262, 147, 298, 185, 344, 309, 302, 185, 309, 147, 421, 203, 185, 115, 309, 390, 310, 309, 171, 271, 185, 421, 344, 185, 390, 298, 328, 421, 390, 262, 115, 185, 309, 115, 203, 185, 115, 309, 390, 310, 309, 171, 278, 185, 49, 309, 180, 185, 302, 384, 390, 390, 384, 180, 384, 185, 390, 298, 262, 171, 421, 115, 185, 298, 344, 203, 309, 271, 185, 309, 203, 185, 68, 171, 421, 344, 487, 421, 147, 147, 298, 185, 309, 115, 203, 185, 310, 309, 147, 147, 309, 344, 203, 309, 115, 18, 262, 309, 185, 262, 203, 278, 185, 231, 421, 264, 298, 390, 262, 115, 185, 18, 262, 421, 115, 185, 180, 298, 310, 421, 72, 262, 115, 185, 309, 171, 384, 115, 278, 185, 440, 171, 298, 115, 185, 147, 262, 302, 203, 262, 115, 185, 262, 147, 203, 171, 421, 302, 421, 309, 115, 185, 421, 310, 115, 262, 390, 271, 185, 115, 309, 390, 310, 309, 171, 185, 310, 510, 298, 171, 309, 203, 171, 298, 185, 298, 171, 302, 262, 185, 298, 302, 302, 262, 390, 115, 298, 344, 185, 421, 344, 278, 185, 501, 384, 344, 309, 302, 185, 298, 185, 180, 262, 421, 185, 344, 421, 115, 147, 278, 185, 501, 384, 344, 309, 302, 185, 310, 384, 115, 262, 309, 171, 309, 185, 390, 298, 262, 171, 421, 115, 185, 344, 262, 147, 147, 298, 271, 185, 264, 421, 203, 298, 309, 185, 72, 147, 298, 344, 180, 421, 203, 185, 298, 171, 302, 262, 185, 264, 309, 115, 203, 421, 72, 262, 147, 262, 390, 185, 262, 203, 278]

print(decrypt(n,e,c))

#[n, e, [ciphertext array]]
# if(m>26):
#     print(list(str(m)))
#     final = list(str(m))
#     message = ""
#     for i in range(len(final)):
#         message += chr(int(final[i])+64)
#     print(message)
# else:
#     print(chr(m+64))

# d = (1/e)%phi
# print(d)

# m = math.ceil((pow(c,d))%n)
# print(m)